@page "/reset-password"
@using Blazored.Toast.Services
@using UpdatedChatApp.Client.Models
@using UpdatedChatApp.Client.Services
@inject NavigationManager navigation
@inject HttpClient http
@inject IToastService toastService
@inject LocalStorageService LocalStorage

<div class="container">
    <h2>Reset Password</h2>
    <EditForm Model="resetPassword" OnValidSubmit="DoReset">
        <div class="form-group">
            <label for="password">Password</label>
            <input type="password" id="password" class="form-control" placeholder="Password" @bind="resetPassword.Password" />
        </div>
         <div class="form-group">
            <label for="password">Password</label>
            <input type="password" id="password" class="form-control" placeholder="Password" @bind="resetPassword.ConfirmPassword" />
        </div>
        <button type="submit" class="btn btn-primary mt-3 w-100">Reset</button>
    </EditForm>
</div>

<style>
    .container {
        max-width: 400px;
        margin: auto;
        padding: 20px;
        border: 1px solid #ddd;
        border-radius: 5px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .form-group {
        margin-bottom: 15px;
    }

    .btn-primary {
        background-color: #8a2be2;
        border-color: #8a2be2;
    }

        .btn-primary:hover {
            background-color: #7a1dd1;
            border-color: #7a1dd1;
        }

    a {
        color: #8a2be2;
    }
</style>

@code {
    private ResetPasswordRequest resetPassword = new ResetPasswordRequest();

    private async Task DoReset()
    {
        resetPassword.Email  = await LocalStorage.GetItemAsync<string>("VerificationEmail");
        var apiendpoint = "https://localhost:7145/api/Account/reset_password";

        var response = await http.PostAsJsonAsync(apiendpoint, resetPassword);

        if(!response.IsSuccessStatusCode)
        {
            var errorMessage = await response.Content.ReadAsStringAsync();
            toastService.ShowError(errorMessage);
        }

        toastService.ShowSuccess("Password reset success");
        await LocalStorage.RemoveItemAsync("VerificationEmail");
        navigation.NavigateTo("/");
    }
}
